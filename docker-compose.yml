services:
  frontend-svc:
    image: ghcr.io/rum-people/frontend-svc:v0.1.0 
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      upstream:
        condition: service_healthy

  upstream:
    image: nginx:1.25.3-alpine3.18
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 5s
      timeout: 5s
      retries: 5  
    depends_on:
      backend-svc:
        condition: service_started
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf

  backend-svc:
    image: ghcr.io/rum-people/backend-svc:v0.1.0 
    restart: unless-stopped
    environment:
      - DATABASE_HOST=backend-svc-pgdb
      - DATABASE_PORT=5432
      - DATABASE_USER=backend-svc
      - DATABASE_PASSWORD=backend-svc
      - DATABASE_NAME=backend-svc
    depends_on:
      backend-svc-pgdb:
        condition: service_healthy

  backend-svc-pgdb:
    image: postgres:16.1-alpine3.19
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=backend-svc
      - POSTGRES_PASSWORD=backend-svc
      - POSTGRES_DB=backend-svc
    volumes:
      - backend-svc-pgdb-data:/var/lib/postgresql/data    


volumes:
  backend-svc-pgdb-data: